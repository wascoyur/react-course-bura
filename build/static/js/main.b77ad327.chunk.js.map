{"version":3,"sources":["components/search-panel/index.js","components/search-panel/search-panel.js","components/app-header/index.js","components/app-header/app-header.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/add-item/index.js","components/add-item/add-item.js","components/app/index.js","components/app/app.js","index.js"],"names":["SearchPanel","state","term","onSearchChange","e","target","value","toLowerCase","setState","props","className","type","placeholder","onChange","this","Component","AppHeader","toDo","done","TodoListItem","label","onToggleDone","onToggleImportant","classNames","important","onClick","onDeleted","TodoList","todos","toDeleted","elements","map","item","id","ItemStatusFilter","buttons","name","active","filter","onChangeFilter","clazz","AddItem","onLabelChange","onSubmit","preventDefault","onAddItem","val","App","todoData","deleteItem","newArray","Array","from","idx","findIndex","el","splice","addItem","nameItem","push","createTodoItem","filterChange","newArr","length","items","indexOf","visibleItems","search","doneCount","open","let","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b77ad327.chunk.js","sourcesContent":["import SearchPanel from './search-panel';\r\n\r\nexport default SearchPanel;\r\n","import React, {Component} from 'react';\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component{\r\n  state={\r\n    term: ''\r\n  }\r\n  onSearchChange = (e) =>{\r\n    let term = e.target.value.toLowerCase() ;\r\n    this.setState({ term });\r\n    this.props.onSearchChange(term)\r\n  }\r\n\r\n\r\n  render(){\r\n    return (\r\n      <form\r\n        className=\"item-add-form d-flex\"\r\n        >\r\n        <input type=\"text\"\r\n          className=\"form-control search-input\"\r\n          placeholder=\"type to search\"\r\n          onChange = { this.onSearchChange }\r\n          value = { this.state.onSearchChange }\r\n        ></input>\r\n      </form>\r\n\r\n    )\r\n  }\r\n}\r\n","import AppHeader from './app-header.js';\r\n\r\nexport default AppHeader;\r\n"," import React from 'react';\r\n import './app-header.css'\r\n const AppHeader = ({toDo, done}) => {\r\n  return (\r\n    <div className=\"app-header d-flex\">\r\n      <h1>Todo List</h1>\r\n      <h2>{toDo} осталось сделать, {done} выполнено</h2>\r\n    </div>\r\n  );\r\n};\r\nexport default AppHeader;\r\n","import TodoListItem from './todo-list-item';\r\n\r\nexport default TodoListItem;\r\n","import React, { Component } from 'react';\r\nimport './todo-list-item.css';\r\n\r\nexport default class TodoListItem extends Component {\r\n\r\n  render(){\r\n    const { label, onToggleDone, onToggleImportant, done, important } = this.props;\r\n\r\n    let classNames = 'todo-list-item';\r\n    if (done) {\r\n      classNames += ' done'\r\n    }\r\n    if (important) {\r\n      classNames += ' important'\r\n    }\r\n    return(\r\n      <span className={ classNames }>\r\n        <span\r\n          className=\"todo-list-item-label\"\r\n          onClick = { onToggleDone }\r\n          >\r\n          { label }\r\n        </span>\r\n\r\n        <button type=\"button\"\r\n                onClick = { onToggleImportant }\r\n                className=\"btn btn-outline-success btn-sm float-right\">\r\n          <i className=\"fa fa-exclamation\" />\r\n        </button>\r\n\r\n        <button type=\"button\"\r\n\r\n                className=\"btn btn-outline-danger btn-sm float-right\">\r\n          <i className=\"fa fa-trash-o\"\r\n          onClick = { this.props.onDeleted }\r\n          />\r\n        </button>\r\n        </span>\r\n  )\r\n  }\r\n}\r\n","import TodoList from './todo-list';\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\nimport TodoListItem from '../todo-list-item/'\r\nimport './todo-list.css'\r\n\r\nconst TodoList = ( {todos, toDeleted, onToggleDone, onToggleImportant} ) => {\r\n\r\n  const elements = todos.map((item) => {\r\n    return(\r\n      <li key={item.id} className=\"list-group-item\">\r\n        <TodoListItem {...item}\r\n\r\n        onDeleted = {()=> {\r\n          toDeleted(item.id);\r\n        }}\r\n        onToggleImportant = {() => { onToggleImportant(item.id)}}\r\n        onToggleDone = {() => { onToggleDone(item.id) }}\r\n        />\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <ul className=\"list-group todo-list\">\r\n      { elements }\r\n    </ul>\r\n  )\r\n}\r\nexport default TodoList;\r\n","import ItemStatusFilter from './item-status-filter';\r\n\r\nexport default ItemStatusFilter;\r\n","import React, { Component } from 'react';\nimport './item-status-filter.css';\n\nexport default class ItemStatusFilter extends Component {\n\n   buttons = [\n              { name:'all', label: 'All', active:false },\n              { name:'active', label: 'Active', active:false },\n              { name:'done', label: 'Done', active:false }\n\n  ]\n  render(){\n    const {filter, onChangeFilter } = this.props\n    const buttons = this.buttons.map(({name, label}) => {\n      const isActive = filter === name;\n      const clazz = isActive ? 'btn-info':'btn-outline-secondary';\n        return <button type=\"button\"\n                className={`btn ${clazz}`}\n                key= { name }\n                onClick = {() => onChangeFilter(name)}\n                >{ label }</button>\n    })\n\n    return(\n      <div className=\"btn-group\">\n        { buttons }\n      </div>\n    )\n  }\n}\n","import AddItem from './add-item';\r\n\r\nexport default AddItem;\r\n","import React, { Component } from 'react';\nimport './add-item.css';\n\nexport default class AddItem extends Component {\n  onLabelChange = (e) =>{\n    this.setState({\n      label: e.target.value\n    });\n   }\n   onSubmit = (e)=>{\n     e.preventDefault();\n     this.props.onAddItem(this.state.label);\n    this.setState({\n      label: ''});\n   }\n  render(){\n    let val = '';\n    if(this.state){\n      val = this.state.label\n    }\n    return(\n        <form\n          className=\"item-add-form d-flex\"\n          onSubmit = { this.onSubmit }\n          >\n          <input type = \"text\"\n            className = \"form-control\"\n            onChange ={this.onLabelChange}\n            placeholder = \"Что должно быть сделано?\"\n            value = {val}\n            >\n          </input>\n          <button type=\"submit\"\n              className=\"btn btn-outline-secondary\"\n            >Add Item\n          </button>\n        </form>\n    )\n  }\n}\n","import App from './app';\r\n\r\nexport default App;\r\n","import React, { Component} from 'react';\r\nimport SearchPanel from '../search-panel/';\r\nimport AppHeader from '../app-header/';\r\nimport TodoList from '../todo-list/';\r\nimport ItemStatusFilter from '../item-status-filter/';\r\nimport AddItem from '../add-item/index'\r\n\r\nexport default class App extends Component {\r\n  state ={\r\n    todoData:[\r\n      {label:'Drink a beer', important:false, id:1, done: false},\r\n      {label:'Develop React App', important:false, id:2, done: false},\r\n      {label:'Be happy', important:false, id:3, done: false}\r\n    ],\r\n    term: '',\r\n    filter: 'all'\r\n  }\r\n  deleteItem = (id) =>{\r\n    this.setState(({ todoData }) =>{\r\n      const newArray = Array.from(todoData)\r\n      const idx = newArray.findIndex( (el) => { return el.id === id });\r\n      newArray.splice(idx, 1);\r\n      return {\r\n        todoData: newArray\r\n      }\r\n    })\r\n  }\r\n  addItem = (nameItem = 'null') => {\r\n    this.setState(() => {\r\n      const newArray = Array.from(this.state.todoData);\r\n      newArray.push( this.createTodoItem(nameItem));\r\n      return { todoData: newArray }\r\n    })\r\n  }\r\n  onToggleImportant = (id) => {\r\n    this.setState(() => {\r\n      const newArray = [...this.state.todoData];\r\n      const idx = newArray.findIndex( (el) => { return el.id === id });\r\n      newArray[idx].important = !newArray[idx].important\r\n      return { todoData: newArray }\r\n    })\r\n  }\r\n  onToggleDone = (id) => {\r\n    this.setState(() => {\r\n      const newArray = [...this.state.todoData];\r\n      const idx = newArray.findIndex( (el) => { return el.id === id });\r\n      newArray[idx].done = !newArray[idx].done\r\n      return { todoData: newArray }\r\n    })\r\n  }\r\n  createTodoItem (label, id=0){\r\n    try {\r\n      let newArr = [...this.state.todoData];\r\n      id = 1+newArr.length++ }\r\n     catch(e){\r\n      id = 1\r\n    }\r\n    return {\r\n            'label': label,\r\n            'important':false,\r\n            'id':id,\r\n            'done': false\r\n          }\r\n  }\r\n  onSearchChange = (term) =>{\r\n    this.setState({term})\r\n  }\r\n  search(items, term ){\r\n    if (term.length === 0) {\r\n      return items\r\n    }\r\n    return items.filter((item) => {\r\n      return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1});\r\n  }\r\n  filter(items, filter){\r\n    switch (filter) {\r\n      case 'done':\r\n        return items.filter((el) =>{\r\n          return el.done === true\r\n        })\r\n      case 'active':\r\n        return items.filter((el) =>{\r\n          return el.done === false\r\n        })\r\n      default:\r\n        return items\r\n    }\r\n  }\r\n  filterChange = (filter)=>{\r\n    this.setState({\r\n       filter: filter\r\n    })\r\n  }\r\n\r\n  render(){\r\n    const { todoData, term, filter } = this.state;\r\n    const visibleItems = this.filter(this.search(todoData, term), filter);\r\n    const doneCount = todoData.filter((el) => {\r\n      return el.done\r\n    }).length\r\n    const open = todoData.length - doneCount;\r\n    return (\r\n          <span>\r\n            <div>\r\n              <AppHeader toDo={open} done={doneCount}/>\r\n              <div className=\"top-panel d-flex\">\r\n                <SearchPanel\r\n                  onSearchChange = { this.onSearchChange }\r\n                />\r\n                <ItemStatusFilter\r\n                   filter = {filter}\r\n                   onChangeFilter = {this.filterChange}\r\n                />\r\n              </div>\r\n              <TodoList\r\n                todos = { visibleItems }\r\n                let toDeleted = {\r\n                  (id) =>{ this.deleteItem(id) }\r\n                }\r\n                onToggleImportant = { this.onToggleImportant }\r\n                onToggleDone = { this.onToggleDone }\r\n              />\r\n              <AddItem onAddItem = { this.addItem }/>\r\n              </div>\r\n          </span>\r\n        )\r\n  }\r\n\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app/'\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n"],"sourceRoot":""}